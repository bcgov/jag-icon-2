# Used to trigger deployment to test and prod Openshift environnment by Image stream re-tagging and labelling pod

name: Trigger deployment to test and prod Openshift environnment by Image stream re-tagging and labelling pod

on:        
  workflow_dispatch:
    inputs:
      app1:
        description: 'App Name (jag-icon2-common-1-1)'    
        required: true
        default: 'jag-icon2-common-1-1'
      app2:
        description: 'App Name (jag-icon2-common-1-2)'    
        required: true
        default: 'jag-icon2-common-1-2'
      app3:
        description: 'App Name (jag-icon2-biometrics)'    
        required: true
        default: 'jag-icon2-biometrics'
      app4:
        description: 'App Name (jag-icon2-myfiles)'    
        required: true
        default: 'jag-icon2-myfiles'
      app5:
        description: 'App Name (jag-icon2-rabbitconsumer)'    
        required: true
        default: 'jag-icon2-rabbitconsumer'
      imageSourceEnv:
        type: choice
        description: Image Source environment
        options:
        - Select a Source Env Image to deploy
        - dev
        - test   
        required: true
        default: 'Select a Source Env Image to deploy'
      imageTargetEnv:
        type: choice
        description: Target Release Environment
        options:
        - Select a Target Env to deploy the Source Image
        - test
        - prod    
        required: true
        default: 'Select a Target Env to deploy the Source Image'
jobs:
  oc-image-tagging:
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.imageTargetEnv }}
    steps:

      - name: Check deployment source and target values
        if: |
          (github.event.inputs.imageSourceEnv == 'dev' &&  github.event.inputs.imageTargetEnv == 'prod') ||
          (github.event.inputs.imageSourceEnv == github.event.inputs.imageTargetEnv )
        run: |
          echo "Selected source env: ${{ github.event.inputs.imageSourceEnv }} and target env: ${{ github.event.inputs.imageTargetEnv }}"
          echo "Please select correct source and target env. Alays deployment should happen from Dev to Test and then Test to Prod"
          exit 1

      - name: Git Checkout
        uses: actions/checkout@v3
        
        # Get the version number which is prefixed with the Github release branches in format release/{version}
      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV
        
        # Get Git latest short Sha# from the release branch used. This Sha# will be used in image tagging as well as DC Pod labelling.
      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-7)
          echo "gitsha=$shortSha" >> $GITHUB_ENV
        
        # Prints vital release paramters used
      - name: Print Release Variables
        run: |
          echo "Release Application 1: ${{ github.event.inputs.app1 }}"
          echo "Release Application 2: ${{ github.event.inputs.app2 }}"
          echo "Release Application 3: ${{ github.event.inputs.app3 }}"
          echo "Release Application 4: ${{ github.event.inputs.app4 }}"
          echo "Release Application 5: ${{ github.event.inputs.app5 }}"
          echo "Release Environment: ${{ github.event.inputs.imageTargetEnv }}"
          echo "Release Version: ${{ env.releaseVersion }}"
          echo "Release Git Sha: ${{env.gitsha}}"

        #Login to Openshift using OC Tools SA and Token for image stream tagging changes - Kamloops (OC PROD)
      - name: Authenticate OC Tools SA - Kamloops (OC PROD)
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          OPENSHIFT_USER: ${{secrets.OPENSHIFT_SA_TOOLS_DEPLOYER_NAME}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_SA_TOOLS_DEPLOYER_TOKEN}}
          namespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
        
        # Re-Tag latest dev (source) jag-icon2-common-1-1 image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback..
      - name: Retag jag-icon2-common-1-1 image to release env and version - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app1 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

      # Re-Tag latest dev (source) jag-icon2-common-1-2 image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback..
      - name: Retag jag-icon2-common-1-2 image to release env and version - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app2 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}
      
      # Re-Tag latest dev (source) jag-icon2-biometrics image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback..
      - name: Retag jag-icon2-biometrics image to release env and version - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app3 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

      # Re-Tag latest dev (source) jag-icon2-myfiles image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback..
      - name: Retag jag-icon2-myfiles image to release env and version - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app4 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

      # Re-Tag latest dev (source) jag-icon2-rabbitconsumer image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback..
      - name: Retag jag-icon2-rabbitconsumer image to release env and version - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app5 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

        #Login to Openshift using OC SA and Token of respective env. for Pod labelling - Kamloops (OC PROD)
      - name: Authenticate OC Env Specific SA - Kamloops (OC PROD)
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
          OPENSHIFT_USER: ${{secrets.OPENSHIFT_SA_Env_DEPLOYER_NAME}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_SA_ENV_DEPLOYER_TOKEN}}
          namespace: ${OPENSHIFT_NAMESPACE}
        
        # Labels the deployment config of the jag-icon2-common-1-1 application with release version number to spin up the pods labelled in same version - Kamloops (OC PROD)
      - name: Labelling jag-icon2-common-1-1 DC to release version - Kamloops (OC PROD)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app1 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'

        # Labels the deployment config of the jag-icon2-common-1-2 application with release version number to spin up the pods labelled in same version - Kamloops (OC PROD)
      - name: Labelling jag-icon2-common-1-2 DC to release version - Kamloops (OC PROD)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app2 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
      # Labels the deployment config of the jag-icon2-biometrics application with release version number to spin up the pods labelled in same version - Kamloops (OC PROD)
      - name: Labelling jag-icon2-biometrics DC to release version - Kamloops (OC PROD)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app3 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'

        # Labels the deployment config of the jag-icon2-myfiles application with release version number to spin up the pods labelled in same version - Kamloops (OC PROD)
      - name: Labelling jag-icon2-myfiles DC to release version - Kamloops (OC PROD)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app4 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
      # Labels the deployment config of the jag-icon2-rabbitconsumer application with release version number to spin up the pods labelled in same version - Kamloops (OC PROD)
      - name: Labelling jag-icon2-rabbitconsumer DC to release version - Kamloops (OC PROD)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app5 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
        # Wait to jag-icon2-common-1-1 DC rollout to get completed before proceeding next stage - Kamloops (OC PROD)
      - name: Wait for jag-icon2-common-1-1 DC rollout - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app1 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch

        # Wait to jag-icon2-common-1-2 DC rollout to get completed before proceeding next stage - Kamloops (OC PROD)
      - name: Wait for jag-icon2-common-1-2 DC rollout - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app2 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-biometrics DC rollout to get completed before proceeding next stage - Kamloops (OC PROD)
      - name: Wait for jag-icon2-biometrics DC rollout - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app3 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-myfiles DC rollout to get completed before proceeding next stage - Kamloops (OC PROD)
      - name: Wait for jag-icon2-myfiles DC rollout - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app4 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-rabbitconsumer DC rollout to get completed before proceeding next stage - Kamloops (OC PROD)
      - name: Wait for jag-icon2-rabbitconsumer DC rollout - Kamloops (OC PROD)
        env:
          appName: ${{ github.event.inputs.app5 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      #Login to Openshift using OC Tools SA and Token for image stream tagging changes - Calgary (OC DR)
      - name: Authenticate OC Tools SA - Calgary (OC DR)
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          OPENSHIFT_USER: ${{secrets.OPENSHIFT_SA_TOOLS_DEPLOYER_NAME}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL_DR}}
          openshift_token: ${{secrets.OPENSHIFT_SA_TOOLS_DEPLOYER_TOKEN_DR}}
          namespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
        
        # Re-Tag latest dev (source) jag-icon2-common-1-1 image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback.
      - name: Retag jag-icon2-common-1-1 image to release env and version - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app1 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

        # Re-Tag latest dev (source) jag-icon2-common-1-2 image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback.
      - name: Retag jag-icon2-common-1-2 image to release env and version - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app2 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}
      
      # Re-Tag latest dev (source) jag-icon2-biometrics image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback.
      - name: Retag jag-icon2-biometrics image to release env and version - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app3 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}
      
      # Re-Tag latest dev (source) jag-icon2-myfiles image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback.
      - name: Retag jag-icon2-myfiles image to release env and version - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app4 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}
      
      # Re-Tag latest dev (source) jag-icon2-rabbitconsumer image to other env to trigger openshift deployment via DeploymentConfig
        # It also creates a tag with release version number to use it in case of rollback.
      - name: Retag jag-icon2-rabbitconsumer image to release env and version - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app5 }}
          imageSourceEnv: ${{ github.event.inputs.imageSourceEnv }}
          imageTargetEnv: ${{ github.event.inputs.imageTargetEnv }}
          openshiftToolsNamespace: ${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}
          openshiftIImageRegistry: ${{secrets.OPENSHIFT_INTERNAL_REPOSITORY}}
          releaseVersion: ${{ env.releaseVersion }}
          gitSha: ${{ env.gitsha }}
        run: |
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageSourceEnv} ${appName}:${imageTargetEnv}
          oc tag ${openshiftIImageRegistry}/${openshiftToolsNamespace}/${appName}:${imageTargetEnv} ${appName}:${releaseVersion}.${gitSha}

        #Login to Openshift using OC SA and Token of respective env. for Pod labelling - Calgary (OC DR)
      - name: Authenticate OC Env Specific SA - Calgary (OC DR)
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
          OPENSHIFT_USER: ${{secrets.OPENSHIFT_SA_Env_DEPLOYER_NAME}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL_DR}}
          openshift_token: ${{secrets.OPENSHIFT_SA_ENV_DEPLOYER_TOKEN_DR}}
          namespace: ${OPENSHIFT_NAMESPACE}
        
        # Labels the deployment config of the jag-icon2-common-1-1 application with release version number to spin up the pods labelled in same version - Calgary (OC DR)
      - name: Labelling jag-icon2-common-1-1 DC to release version - Calgary (OC DR)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app1 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'

        # Labels the deployment config of the jag-icon2-common-1-2 application with release version number to spin up the pods labelled in same version - Calgary (OC DR)
      - name: Labelling jag-icon2-common-1-2 DC to release version - Calgary (OC DR)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app2 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
      # Labels the deployment config of the jag-icon2-biometrics application with release version number to spin up the pods labelled in same version - Calgary (OC DR)
      - name: Labelling jag-icon2-biometrics DC to release version - Calgary (OC DR)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app3 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
      # Labels the deployment config of the jag-icon2-myfiles application with release version number to spin up the pods labelled in same version - Calgary (OC DR)
      - name: Labelling jag-icon2-myfiles DC to release version - Calgary (OC DR)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app4 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'
      
      # Labels the deployment config of the jag-icon2-rabbitconsumer application with release version number to spin up the pods labelled in same version - Calgary (OC DR)
      - name: Labelling jag-icon2-rabbitconsumer DC to release version - Calgary (OC DR)
        env:
          releaseVersion: ${{ env.releaseVersion }}
          appName: ${{ github.event.inputs.app5 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc patch dc ${appName} -n ${openshiftEnvNamespace} --patch '{"spec":{"template":{"metadata":{"labels":{"version":"${{ env.releaseVersion }}.${{ env.gitsha }}"}}}}}'

        # Wait to jag-icon2-common-1-1 DC rollout to get completed before proceeding next stage - Calgary (OC DR)
      - name: Wait for jag-icon2-common-1-1 DC rollout - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app1 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch

        # Wait to jag-icon2-common-1-2 DC rollout to get completed before proceeding next stage - Calgary (OC DR)
      - name: Wait for jag-icon2-common-1-2 DC rollout - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app2 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-biometrics DC rollout to get completed before proceeding next stage - Calgary (OC DR)
      - name: Wait for jag-icon2-biometrics DC rollout - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app3 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-myfiles DC rollout to get completed before proceeding next stage - Calgary (OC DR)
      - name: Wait for jag-icon2-myfiles DC rollout - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app4 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
      
      # Wait to jag-icon2-rabbitconsumer DC rollout to get completed before proceeding next stage - Calgary (OC DR)
      - name: Wait for jag-icon2-rabbitconsumer DC rollout - Calgary (OC DR)
        env:
          appName: ${{ github.event.inputs.app5 }}
          openshiftEnvNamespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{ github.event.inputs.imageTargetEnv }}
        run: |
          oc rollout status -n ${openshiftEnvNamespace} dc/${appName} --watch
